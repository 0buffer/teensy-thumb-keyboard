* teensy-thumb-keyboard

  Handheld tactile switch keyboard for Teensy 3.2 compatible boards.

  More photos and information available on the [[https://hackaday.io/project/162281-teensy-thumb-keyboard][hackaday.io page]].

** Features

   - 60 keys arranged in a 6x10 matrix (uses 16 pins used on the
     microcontroller).
   - Silkscreen has a qwerty layout with number keys arranged in a numpad.
   - SPI, I2C, and 2 additional GPIOs broken out. Aside from these pins all
     others are used to read the key matrix.
   - Three possible orientations:
     - Teensy on the front mounted rightside up With usb port facing north
     - Teensy on the back mounted upside down with usb port facing north or south
     - Teensy on the back mounted upside down with usb port facing south.
       Note: Breakout pins will only work as expected with USB facing north.
   - Beginner friendly through hole soldering.
   - Example Arduino sketch firmware provided.
   - Layout is completely customizeable in the firmware.
   - Footprint compatible microcontroller boards:
     - [[https://www.pjrc.com/store/teensy32.html][Teensy 3.2]]
     - [[https://www.pjrc.com/store/teensylc.html][Teensy LC]]
     - [[https://www.tindie.com/products/TleraCorp/butterfly-stm32l433-development-board/][Butterfly STM32L433]]

*** v1.1 Photo
    [[./images/v1.1_photo1.jpg]]

*** V1.0 Photo
    [[./images/v1.0_photo1.jpg]]

** Cases

   - Keyboard Faceplate [[https://a360.co/2QAJ0Qb][Fusion 360 Public Link]]
   - Raspberry Pi 3 B+ & HyperPixel4 Handheld [[https://a360.co/2QzHvla][Fusion 360 Public Link]]

** Firmware

   - The layout for USB keyboarding is defined in the ~usb_key_matrix~ variable
     in [[https://github.com/AnthonyDiGirolamo/teensy-thumb-keyboard/blob/master/firmware/LayoutThumbKeyboard.h#L109][LayoutThumbKeyboard.h]]

   - If you don't need a USB keyboard and are rolling your own hardware project
     then you can focus on the layout defined by the ~ascii_key_matrix~ variable
     in [[https://github.com/AnthonyDiGirolamo/teensy-thumb-keyboard/blob/master/firmware/LayoutThumbKeyboard.h#L74][LayoutThumbKeyboard.h]]

   - There are three layers defined: base, shift, and Fn layers.

   - USB can be disabled by commenting out define ~USE_TEENSY_USB_KEYBOARD~.

   - All the keyboardy goodness is handled by the ~keyboard_update();~ function
     called from inside the standard Arduino ~loop()~.

   - If you don't need the keys to behave like a keyboard you can gut most of
     that example and just use ~key_matrix.update();~ The KeyboardMatrix class
     handles reading the button states.

   - An alternative firmware option for a pure USB keyboard would be to run the
     excellent https://github.com/qmk/qmk_firmware.


